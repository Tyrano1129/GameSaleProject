plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'kr.game'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // spring wep
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // 타임리프
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // MYSQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    // 룸북
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // P6Spy 의존성 추가
    implementation 'p6spy:p6spy:3.9.1'
    implementation 'com.github.gavlyukovskiy:datasource-decorator-spring-boot-autoconfigure:1.9.0'

    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // 메일서버와 연결해서 메일을 발송하는데 필요한 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //iamport
    implementation 'com.github.iamport:iamport-rest-client-java:0.1.6'
    implementation 'commons-io:commons-io:2.6'

    // gcp
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter', version: '1.2.5.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-storage', version: '1.2.5.RELEASE'


    // jackson 라이브러리
    implementation "com.fasterxml.jackson.core:jackson-core:2.16.1"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.16.1"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.16.1"

    // webclient 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

//    // css, js, html, java 파일이 수정되면 서버 자동으로 재시작 ( 인텔리제이 설정도 바꿔야함 )
//    implementation  'org.springframework.boot:spring-boot-devtools'

    // OAuth 2.0
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // queryDSL Q도메인클래스 파일을 미리만든다. -> generated 폴더 안에 :: sql 쿼리문을 자바 메서드처럼 사용하게
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}
// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}
// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}